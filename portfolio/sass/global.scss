@use 'abstracts/variables' as *;
@use 'abstracts/mixins' as *;
@use 'abstracts/functions' as *;

* {
    margin: 0;
    padding: 0;
    font-size: 17px;
    box-sizing: border-box;
    font-family: "Montserrat", sans-serif;
    /* Apply Montserrat globally */
}

a {
    text-decoration: none;
    color: $main-accent-color;

    &:hover {
        color: $super-accent-color;
    }
}

p {
    line-height: 1.6;
    margin-inline: 1rem;
    text-indent: 1rem;
    padding: 0.2rem;
    text-align: justify;
}

%header-base {
    margin: 0;
    line-height: 1.2;
}

@for $i from 1 through 6 {
    h#{$i} {
        @extend %header-base;
        @each $key, $value in heading-format($i) {
            #{$key}: $value; // Dynamically sets padding and font-size
        }
    }
}


figcaption {
    font-style: italic;
    text-align: center;
    padding: 0.5rem;
    color: $main-accent-color;
}

button {
    background-color: $main-accent-color;
    color: $main-background;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color $transition-time ease;

    &:hover {
        background-color: $super-accent-color;
    }
}

ul {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 0.4rem;
    list-style: none;
}

li {
    padding-left: 0.9rem;
    padding-top: 0.4rem;
}

figure {
    display: flex;
    flex-direction: column;
    margin-left: auto;
    margin-right: auto;
    align-items: center;
    width: 100%;
}

img {
    display: block;
    max-width: 100%;
    height: auto;
    border-radius: 28px;
    padding: 0.5rem;
}

main {
    background-color: $main-background;
    padding: 2rem 0;

    li::before {
        content: "âœ“";
        color: $main-accent-color;
        position: absolute;
        margin-left: -1.2rem;
    }
}

q {
    font-style: italic;
}

article {
    padding-bottom: 1rem;
}

:hover {
    transition: $transition-time;
}

.desktop-only {
    display: none;
}

@include mq(medium) {
    main {
        padding-left: calc((100vw - #{map-get($breakpoints, medium)} - 150px) / 2);
        padding-right: calc((100vw - #{map-get($breakpoints, medium)} - 150px) / 2);
    }
}